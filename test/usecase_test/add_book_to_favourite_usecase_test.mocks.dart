// Mocks generated by Mockito 5.1.0 from annotations
// in my_books/test/usecase_test/add_book_to_favourite_usecase_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:my_books/domain/entities/book.dart' as _i5;
import 'package:my_books/domain/repositories/auth_repository.dart' as _i6;
import 'package:my_books/domain/repositories/book_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserMetadata_0 extends _i1.Fake implements _i2.UserMetadata {}

class _FakeIdTokenResult_1 extends _i1.Fake implements _i2.IdTokenResult {}

class _FakeUserCredential_2 extends _i1.Fake implements _i2.UserCredential {}

class _FakeConfirmationResult_3 extends _i1.Fake
    implements _i2.ConfirmationResult {}

class _FakeUser_4 extends _i1.Fake implements _i2.User {}

/// A class which mocks [BookRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookRepository extends _i1.Mock implements _i3.BookRepository {
  MockBookRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.Book?> getBookByID(String? id) =>
      (super.noSuchMethod(Invocation.method(#getBookByID, [id]),
          returnValue: Future<_i5.Book?>.value()) as _i4.Future<_i5.Book?>);
  @override
  _i4.Stream<bool> checkBookLike({String? userID, String? bookID}) =>
      (super.noSuchMethod(
          Invocation.method(
              #checkBookLike, [], {#userID: userID, #bookID: bookID}),
          returnValue: Stream<bool>.empty()) as _i4.Stream<bool>);
  @override
  _i4.Stream<List<_i5.Book>> getFavouriteBooks({String? userID}) =>
      (super.noSuchMethod(
              Invocation.method(#getFavouriteBooks, [], {#userID: userID}),
              returnValue: Stream<List<_i5.Book>>.empty())
          as _i4.Stream<List<_i5.Book>>);
  @override
  _i4.Stream<List<_i5.Book>> getAllBooks() =>
      (super.noSuchMethod(Invocation.method(#getAllBooks, []),
              returnValue: Stream<List<_i5.Book>>.empty())
          as _i4.Stream<List<_i5.Book>>);
  @override
  _i4.Future<List<_i5.Book>> getPopularBooks() =>
      (super.noSuchMethod(Invocation.method(#getPopularBooks, []),
              returnValue: Future<List<_i5.Book>>.value(<_i5.Book>[]))
          as _i4.Future<List<_i5.Book>>);
  @override
  _i4.Future<List<_i5.Book>> getNewBooks() =>
      (super.noSuchMethod(Invocation.method(#getNewBooks, []),
              returnValue: Future<List<_i5.Book>>.value(<_i5.Book>[]))
          as _i4.Future<List<_i5.Book>>);
  @override
  _i4.Stream<List<_i5.Book>> getFilteredBooks(List<String>? genres) =>
      (super.noSuchMethod(Invocation.method(#getFilteredBooks, [genres]),
              returnValue: Stream<List<_i5.Book>>.empty())
          as _i4.Stream<List<_i5.Book>>);
  @override
  _i4.Stream<List<_i5.Book>> getBooksByQuery(String? query) =>
      (super.noSuchMethod(Invocation.method(#getBooksByQuery, [query]),
              returnValue: Stream<List<_i5.Book>>.empty())
          as _i4.Stream<List<_i5.Book>>);
  @override
  _i4.Future<void> addBookToFavourite({String? userID, String? bookID}) =>
      (super.noSuchMethod(
          Invocation.method(
              #addBookToFavourite, [], {#userID: userID, #bookID: bookID}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteBookFromFavourite({String? userID, String? bookID}) =>
      (super.noSuchMethod(
          Invocation.method(
              #deleteBookFromFavourite, [], {#userID: userID, #bookID: bookID}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i6.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> signIn(String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#signIn, [email, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> signUp(String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#signUp, [email, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Stream<_i2.User?> authStateChanges() =>
      (super.noSuchMethod(Invocation.method(#authStateChanges, []),
          returnValue: Stream<_i2.User?>.empty()) as _i4.Stream<_i2.User?>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);
  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);
  @override
  _i2.UserMetadata get metadata =>
      (super.noSuchMethod(Invocation.getter(#metadata),
          returnValue: _FakeUserMetadata_0()) as _i2.UserMetadata);
  @override
  List<_i2.UserInfo> get providerData =>
      (super.noSuchMethod(Invocation.getter(#providerData),
          returnValue: <_i2.UserInfo>[]) as List<_i2.UserInfo>);
  @override
  String get uid =>
      (super.noSuchMethod(Invocation.getter(#uid), returnValue: '') as String);
  @override
  _i4.Future<void> delete() =>
      (super.noSuchMethod(Invocation.method(#delete, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<String> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(Invocation.method(#getIdToken, [forceRefresh]),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<_i2.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(Invocation.method(#getIdTokenResult, [forceRefresh]),
              returnValue:
                  Future<_i2.IdTokenResult>.value(_FakeIdTokenResult_1()))
          as _i4.Future<_i2.IdTokenResult>);
  @override
  _i4.Future<_i2.UserCredential> linkWithCredential(
          _i2.AuthCredential? credential) =>
      (super.noSuchMethod(Invocation.method(#linkWithCredential, [credential]),
              returnValue:
                  Future<_i2.UserCredential>.value(_FakeUserCredential_2()))
          as _i4.Future<_i2.UserCredential>);
  @override
  _i4.Future<_i2.UserCredential> linkWithPopup(_i7.AuthProvider? provider) =>
      (super.noSuchMethod(Invocation.method(#linkWithPopup, [provider]),
              returnValue:
                  Future<_i2.UserCredential>.value(_FakeUserCredential_2()))
          as _i4.Future<_i2.UserCredential>);
  @override
  _i4.Future<_i2.ConfirmationResult> linkWithPhoneNumber(String? phoneNumber,
          [_i2.RecaptchaVerifier? verifier]) =>
      (super.noSuchMethod(
              Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
              returnValue: Future<_i2.ConfirmationResult>.value(
                  _FakeConfirmationResult_3()))
          as _i4.Future<_i2.ConfirmationResult>);
  @override
  _i4.Future<_i2.UserCredential> reauthenticateWithCredential(
          _i2.AuthCredential? credential) =>
      (super.noSuchMethod(
              Invocation.method(#reauthenticateWithCredential, [credential]),
              returnValue:
                  Future<_i2.UserCredential>.value(_FakeUserCredential_2()))
          as _i4.Future<_i2.UserCredential>);
  @override
  _i4.Future<void> reload() =>
      (super.noSuchMethod(Invocation.method(#reload, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> sendEmailVerification(
          [_i2.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
          Invocation.method(#sendEmailVerification, [actionCodeSettings]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.User> unlink(String? providerId) =>
      (super.noSuchMethod(Invocation.method(#unlink, [providerId]),
              returnValue: Future<_i2.User>.value(_FakeUser_4()))
          as _i4.Future<_i2.User>);
  @override
  _i4.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(Invocation.method(#updateEmail, [newEmail]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(Invocation.method(#updatePassword, [newPassword]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updatePhoneNumber(
          _i2.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
          Invocation.method(#updatePhoneNumber, [phoneCredential]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(Invocation.method(#updateDisplayName, [displayName]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(Invocation.method(#updatePhotoURL, [photoURL]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
          Invocation.method(#updateProfile, [],
              {#displayName: displayName, #photoURL: photoURL}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> verifyBeforeUpdateEmail(String? newEmail,
          [_i2.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
          Invocation.method(
              #verifyBeforeUpdateEmail, [newEmail, actionCodeSettings]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
