// Mocks generated by Mockito 5.1.0 from annotations
// in my_books/test/triangle_helper_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_books/calculator.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [Calculator].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalculator extends _i1.Mock implements _i2.Calculator {
  MockCalculator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double sum({double? number1, double? number2}) => (super.noSuchMethod(
      Invocation.method(#sum, [], {#number1: number1, #number2: number2}),
      returnValue: 0.0) as double);
  @override
  double difference({double? number1, double? number2}) => (super.noSuchMethod(
      Invocation.method(
          #difference, [], {#number1: number1, #number2: number2}),
      returnValue: 0.0) as double);
  @override
  double multiply({double? number1, double? number2}) => (super.noSuchMethod(
      Invocation.method(#multiply, [], {#number1: number1, #number2: number2}),
      returnValue: 0.0) as double);
  @override
  double divide({double? number1, double? number2}) => (super.noSuchMethod(
      Invocation.method(#divide, [], {#number1: number1, #number2: number2}),
      returnValue: 0.0) as double);
}
